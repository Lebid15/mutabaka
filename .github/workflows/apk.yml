name: Build Android (APK & AAB)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EAS_BUILD_WORKINGDIR: "mobile"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Install utilities
        run: sudo apt-get update && sudo apt-get install -y jq wget

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Install latest EAS CLI
        run: npm install -g eas-cli

      - name: Build and Download AAB
        id: build_aab
        run: |
          BUILD_JSON=$(eas build --platform android --profile production --non-interactive --wait --json)

          echo "Build details: $BUILD_JSON"
          echo "$BUILD_JSON" | jq '.' > ../build-aab.json
          BUILD_URL=$(echo "$BUILD_JSON" | jq -r 'if type=="array" then (.[0].artifacts.buildUrl // .[0].artifacts.applicationArchiveUrl // empty) else (.artifacts.buildUrl // .artifacts.applicationArchiveUrl // empty) end')
          BUILD_PAGE_URL=$(echo "$BUILD_JSON" | jq -r 'if type=="array" then (.[0].buildDetailsPageUrl // empty) else (.buildDetailsPageUrl // empty) end')
          
          if [ -z "$BUILD_URL" ] || [ "$BUILD_URL" == "null" ]; then
            echo "::error::Failed to get AAB build URL from EAS."
            exit 1
          fi
          
          echo "Downloading AAB from $BUILD_URL"
          wget -O mutabaka.aab "$BUILD_URL"
          echo "build_url=$BUILD_URL" >> "$GITHUB_OUTPUT"
          if [ -n "$BUILD_PAGE_URL" ] && [ "$BUILD_PAGE_URL" != "null" ]; then
            echo "build_page_url=$BUILD_PAGE_URL" >> "$GITHUB_OUTPUT"
          fi
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-aab
          path: mobile/mutabaka.aab
          retention-days: 7

      - name: Build and Download APK
        id: build_apk
        run: |
          BUILD_JSON=$(eas build --platform android --profile preview --non-interactive --wait --json)
          echo "Build details: $BUILD_JSON"
          echo "$BUILD_JSON" | jq '.' > ../build-apk.json
          BUILD_URL=$(echo "$BUILD_JSON" | jq -r 'if type=="array" then (.[0].artifacts.buildUrl // .[0].artifacts.applicationArchiveUrl // empty) else (.artifacts.buildUrl // .artifacts.applicationArchiveUrl // empty) end')
          BUILD_PAGE_URL=$(echo "$BUILD_JSON" | jq -r 'if type=="array" then (.[0].buildDetailsPageUrl // empty) else (.buildDetailsPageUrl // empty) end')

          if [ -z "$BUILD_URL" ] || [ "$BUILD_URL" == "null" ]; then
            echo "::error::Failed to get APK build URL from EAS."
            exit 1
          fi

          echo "Downloading APK from $BUILD_URL"
          wget -O mutabaka.apk "$BUILD_URL"
          echo "build_url=$BUILD_URL" >> "$GITHUB_OUTPUT"
          if [ -n "$BUILD_PAGE_URL" ] && [ "$BUILD_PAGE_URL" != "null" ]; then
            echo "build_page_url=$BUILD_PAGE_URL" >> "$GITHUB_OUTPUT"
          fi
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-apk
          path: mobile/mutabaka.apk
          retention-days: 7
          
      - name: Print download links to summary
        if: always()
        run: |
          echo "### 📦 Build Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          AAB_URL="${{ steps.build_aab.outputs.build_url }}"
          AAB_PAGE_URL="${{ steps.build_aab.outputs.build_page_url }}"
          APK_URL="${{ steps.build_apk.outputs.build_url }}"
          APK_PAGE_URL="${{ steps.build_apk.outputs.build_page_url }}"

          if [ ! -z "$AAB_URL" ]; then
            echo "### 📥 AAB Download (Production)" >> $GITHUB_STEP_SUMMARY
            echo "🔗 [Download AAB file]($AAB_URL)" >> $GITHUB_STEP_SUMMARY
            if [ ! -z "$AAB_PAGE_URL" ]; then
              echo "🔍 [View build details]($AAB_PAGE_URL)" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          if [ ! -z "$APK_URL" ]; then
            echo "### 📥 APK Download (Preview)" >> $GITHUB_STEP_SUMMARY
            echo "🔗 [Download APK file]($APK_URL)" >> $GITHUB_STEP_SUMMARY
            if [ ! -z "$APK_PAGE_URL" ]; then
              echo "🔍 [View build details]($APK_PAGE_URL)" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### 🌐 EAS Dashboard" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View all builds on EAS](https://expo.dev/accounts/mutabaka/projects/mutabaka/builds)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Build Info" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **AAB file** - For Google Play Store upload" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 **APK file** - For direct installation and testing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Build completed successfully!**" >> $GITHUB_STEP_SUMMARY


