name: Build Android (APK & AAB)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EAS_BUILD_WORKINGDIR: "mobile"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Build AAB for Production
        run: eas build --platform android --profile production --non-interactive --output ./mutabaka.aab
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-aab
          path: mobile/mutabaka.aab
          retention-days: 7

      - name: Build APK for Preview
        run: eas build --platform android --profile preview --non-interactive --output ./mutabaka.apk
        working-directory: ${{ env.EAS_BUILD_WORKINGDIR }}

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-apk
          path: mobile/mutabaka.apk
          retention-days: 7

          
      - name: Upload AAB artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-aab
          path: downloads/mutabaka-release.aab
          if-no-files-found: warn
          
      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutabaka-apk
          path: downloads/mutabaka-release.apk
          if-no-files-found: warn
          
      - name: Print download links to summary
        if: always()
        run: |
          echo "### 📦 Build Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Extract download URLs from build outputs
          if [ -f build-aab.json ]; then
            AAB_URL=$(cat build-aab.json | grep -o '"artifacts":{"buildUrl":"[^"]*"' | sed 's/.*"buildUrl":"\([^"]*\)".*/\1/' || echo "")
            if [ ! -z "$AAB_URL" ]; then
              echo "### 📥 AAB Download (Production)" >> $GITHUB_STEP_SUMMARY
              echo "� [Download AAB file]($AAB_URL)" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          if [ -f build-apk.json ]; then
            APK_URL=$(cat build-apk.json | grep -o '"artifacts":{"buildUrl":"[^"]*"' | sed 's/.*"buildUrl":"\([^"]*\)".*/\1/' || echo "")
            if [ ! -z "$APK_URL" ]; then
              echo "### 📥 APK Download (Preview)" >> $GITHUB_STEP_SUMMARY
              echo "🔗 [Download APK file]($APK_URL)" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "### 🌐 EAS Dashboard" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View all builds on EAS](https://expo.dev/accounts/mutabaka/projects/mutabaka/builds)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Build Info" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **AAB file** - For Google Play Store upload" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 **APK file** - For direct installation and testing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Build completed successfully!**" >> $GITHUB_STEP_SUMMARY


