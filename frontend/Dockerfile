# Frontend Dockerfile for Mutabaka (Next.js)
ARG BASE_NODE_IMAGE=node:20-alpine
FROM ${BASE_NODE_IMAGE} AS builder
WORKDIR /app
ARG NEXT_PUBLIC_VAPID_PUBLIC_KEY
ARG NEXT_PUBLIC_API_PROTO
ARG NEXT_PUBLIC_API_HOST
ARG NEXT_PUBLIC_API_PORT
ARG NEXT_PUBLIC_WS_PROTO
ARG NEXT_PUBLIC_ENABLE_WS
ARG NEXT_PUBLIC_DEBUG_FORCE_APPEND
ARG NEXT_PUBLIC_SW_VERSION
ARG NEXT_PUBLIC_PUSHER_KEY
ARG NEXT_PUBLIC_PUSHER_CLUSTER
ENV NEXT_PUBLIC_VAPID_PUBLIC_KEY=${NEXT_PUBLIC_VAPID_PUBLIC_KEY}
ENV NEXT_PUBLIC_API_PROTO=${NEXT_PUBLIC_API_PROTO}
ENV NEXT_PUBLIC_API_HOST=${NEXT_PUBLIC_API_HOST}
ENV NEXT_PUBLIC_API_PORT=${NEXT_PUBLIC_API_PORT}
ENV NEXT_PUBLIC_WS_PROTO=${NEXT_PUBLIC_WS_PROTO}
ENV NEXT_PUBLIC_ENABLE_WS=${NEXT_PUBLIC_ENABLE_WS}
ENV NEXT_PUBLIC_DEBUG_FORCE_APPEND=${NEXT_PUBLIC_DEBUG_FORCE_APPEND}
ENV NEXT_PUBLIC_SW_VERSION=${NEXT_PUBLIC_SW_VERSION}
ENV NEXT_PUBLIC_PUSHER_KEY=${NEXT_PUBLIC_PUSHER_KEY}
ENV NEXT_PUBLIC_PUSHER_CLUSTER=${NEXT_PUBLIC_PUSHER_CLUSTER}
COPY package.json package-lock.json* pnpm-lock.yaml* yarn.lock* ./
RUN npm ci || npm install
COPY . .
RUN npm run build

FROM ${BASE_NODE_IMAGE} AS runner
WORKDIR /app
ENV NODE_ENV=production \
    PORT=3000 \
    HOSTNAME=0.0.0.0
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
EXPOSE 3000
CMD ["node", "node_modules/next/dist/bin/next", "start", "-p", "3000"]
